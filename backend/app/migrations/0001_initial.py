# Generated by Django 5.2.3 on 2025-06-12 13:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Description', models.CharField(max_length=500)),
                ('Recipe', models.CharField(max_length=500)),
                ('Ingredients', models.JSONField(blank=True, default=list, null=True)),
                ('Quantities', models.JSONField(blank=True, default=list, null=True)),
                ('Food_Groups', models.JSONField(blank=True, default=list, null=True)),
                ('Unique_Food_Groups_Quantities', models.JSONField(blank=True, default=list, null=True)),
                ('Total_Energy', models.FloatField(default=0, null=True)),
                ('Total_Protein', models.FloatField(default=0, null=True)),
                ('Total_Fat', models.FloatField(default=0, null=True)),
                ('Total_Carbs', models.FloatField(default=0, null=True)),
                ('Total_Fibre', models.FloatField(default=0, null=True)),
                ('Total_Calcium', models.FloatField(default=0, null=True)),
                ('Total_Iron', models.FloatField(default=0, null=True)),
                ('Total_Folate', models.FloatField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inorganic',
            fields=[
                ('Food_Code', models.CharField(default='zero', max_length=7, primary_key=True, serialize=False)),
                ('Calcium', models.FloatField(blank=True, max_length=255, null=True)),
                ('Iron', models.FloatField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_energy_intake', models.FloatField(default=2000)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('week', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proximate',
            fields=[
                ('Food_Code', models.CharField(default='zero', max_length=7, primary_key=True, serialize=False)),
                ('Food_Name', models.CharField(max_length=100)),
                ('Description', models.CharField(max_length=500)),
                ('Group', models.CharField(max_length=3)),
                ('Protein', models.FloatField(blank=True, max_length=255, null=True)),
                ('Fat', models.FloatField(blank=True, max_length=255, null=True)),
                ('Carbohydrate', models.FloatField(blank=True, max_length=255, null=True)),
                ('Energy', models.FloatField(blank=True, max_length=255, null=True)),
                ('Fibre', models.FloatField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vitamin',
            fields=[
                ('Food_Code', models.CharField(default='zero', max_length=7, primary_key=True, serialize=False)),
                ('Folate', models.FloatField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Country', models.CharField(default='Irish', max_length=10)),
                ('Name', models.CharField(max_length=500)),
                ('Description', models.CharField(max_length=500)),
                ('Type', models.CharField(max_length=20)),
                ('Autumn', models.CharField(max_length=1)),
                ('Winter', models.CharField(max_length=1)),
                ('Spring', models.CharField(max_length=1)),
                ('Summer', models.CharField(max_length=1)),
                ('Dishes', models.JSONField(blank=True, default=list, null=True)),
                ('Ingredients', models.JSONField(blank=True, default=list, null=True)),
                ('Quantities', models.JSONField(blank=True, default=list, null=True)),
                ('Food_Groups', models.JSONField(blank=True, default=list, null=True)),
                ('Food_Groups_Counter', models.JSONField(blank=True, default=list, null=True)),
                ('Total_Energy', models.FloatField(default=0, null=True)),
                ('Total_Protein', models.FloatField(default=0, null=True)),
                ('Total_Fat', models.FloatField(default=0, null=True)),
                ('Total_Carbs', models.FloatField(default=0, null=True)),
                ('Total_Fibre', models.FloatField(default=0, null=True)),
                ('Total_Calcium', models.FloatField(default=0, null=True)),
                ('Total_Iron', models.FloatField(default=0, null=True)),
                ('Total_Folate', models.FloatField(default=0, null=True)),
                ('Meat', models.IntegerField(default=0, null=True)),
                ('Plant_protein', models.IntegerField(default=0, null=True)),
                ('Vegetables', models.IntegerField(default=0, null=True)),
                ('Fruit', models.IntegerField(default=0, null=True)),
                ('Dairy', models.IntegerField(default=0, null=True)),
                ('Nuts_and_seeds', models.IntegerField(default=0, null=True)),
                ('Fish', models.IntegerField(default=0, null=True)),
                ('veg_q', models.IntegerField(default=0, null=True)),
                ('veg_s', models.IntegerField(default=0, null=True)),
                ('fru_q', models.IntegerField(default=0, null=True)),
                ('fru_s', models.IntegerField(default=0, null=True)),
                ('jui_q', models.IntegerField(default=0, null=True)),
                ('jui_s', models.IntegerField(default=0, null=True)),
                ('leg_q', models.IntegerField(default=0, null=True)),
                ('leg_s', models.IntegerField(default=0, null=True)),
                ('dai_q', models.IntegerField(default=0, null=True)),
                ('dai_s', models.IntegerField(default=0, null=True)),
                ('che_q', models.IntegerField(default=0, null=True)),
                ('che_s', models.IntegerField(default=0, null=True)),
                ('nns_q', models.IntegerField(default=0, null=True)),
                ('nns_s', models.IntegerField(default=0, null=True)),
                ('blv_s', models.IntegerField(default=0, null=True)),
                ('blv_q', models.IntegerField(default=0, null=True)),
                ('mea_q', models.IntegerField(default=0, null=True)),
                ('mea_s', models.IntegerField(default=0, null=True)),
                ('fis_q', models.IntegerField(default=0, null=True)),
                ('fis_s', models.IntegerField(default=0, null=True)),
                ('oif_q', models.IntegerField(default=0, null=True)),
                ('oif_s', models.IntegerField(default=0, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['Country'], name='app_meal_Country_0e7c7c_idx'), models.Index(fields=['Type'], name='app_meal_Type_442237_idx'), models.Index(fields=['Winter'], name='app_meal_Winter_1d8ac8_idx'), models.Index(fields=['Spring'], name='app_meal_Spring_968dd3_idx'), models.Index(fields=['Summer'], name='app_meal_Summer_fe9e25_idx'), models.Index(fields=['Autumn'], name='app_meal_Autumn_485e7b_idx'), models.Index(fields=['Meat'], name='app_meal_Meat_b70b36_idx'), models.Index(fields=['Dairy'], name='app_meal_Dairy_ddb72e_idx'), models.Index(fields=['Nuts_and_seeds'], name='app_meal_Nuts_an_70b132_idx'), models.Index(fields=['Fish'], name='app_meal_Fish_9611b0_idx')],
            },
        ),
        migrations.CreateModel(
            name='NPItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(default='monday', max_length=20)),
                ('meal_type', models.CharField(default='breakfast', max_length=20)),
                ('valid_day', models.BooleanField(default=True, null=True)),
                ('shopping_list', models.BooleanField(default=False, null=True)),
                ('checked', models.BooleanField(default=False, null=True)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.meal')),
                ('np', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.np')),
            ],
        ),
        migrations.CreateModel(
            name='UserAchievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('badges', models.JSONField(blank=True, default=list, null=True)),
                ('trails', models.JSONField(blank=True, default=list, null=True)),
                ('level', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserActionAchievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('day', models.CharField(default='', max_length=255)),
                ('action', models.CharField(default='', max_length=255)),
                ('reason', models.CharField(default='', max_length=255, null=True)),
                ('points', models.IntegerField(default=0, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Role', models.CharField(default='ungender', max_length=10)),
                ('Pilot_Country', models.CharField(default=None, max_length=50, null=True)),
                ('Sex', models.CharField(default='ungender', max_length=10)),
                ('Yob', models.IntegerField(default=1994)),
                ('Age', models.IntegerField(default=32, null=True)),
                ('Height', models.FloatField(default=1.78)),
                ('Weight', models.FloatField(default=75)),
                ('Pal', models.CharField(default='Sedentary', max_length=50)),
                ('Bmi', models.FloatField(default=24.6)),
                ('Bmr', models.FloatField(default=1738)),
                ('Energy_Intake', models.FloatField(default=2000)),
                ('Target_Weight', models.FloatField(default=24.6)),
                ('Goal', models.CharField(default='ungender', max_length=10)),
                ('TargetGoal', models.CharField(default='ungender', max_length=10)),
                ('Allergies', models.CharField(max_length=50, null=True)),
                ('Preferences', models.CharField(max_length=50, null=True)),
                ('Selected_Cuisines', models.JSONField(blank=True, default=list, null=True)),
                ('User', models.OneToOneField(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='np',
            name='UserProfile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.userprofile'),
        ),
    ]
